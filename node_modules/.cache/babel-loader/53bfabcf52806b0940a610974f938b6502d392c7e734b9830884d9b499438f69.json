{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { FormLabel, FormControl, NumberInput, NumberInputField\n\n//   Button,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\n// const calculateCompoundInterest;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TermDepositCalc = () => {\n  _s();\n  const [termDepositTerms, setTermDepositTerms] = useState({\n    depositAmount: 10,\n    interestRate: 5,\n    investmentTerm: 1,\n    interestPaidFrequency: \"monthly\"\n  });\n\n  //   const [totalBalance, setTotalBalance] = useState();\n\n  const handleChange = value => {\n    console.log(\"event: \", value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"depositAmount\",\n        children: \"Deposit Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n        id: \"depositAmount\",\n        onChange: handleChange,\n        value: termDepositTerms.depositAmount\n        //   precision={0}\n        ,\n        children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TermDepositCalc, \"OBTdHV42AuVXyQGSsfVokmkA14U=\");\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["FormLabel","FormControl","NumberInput","NumberInputField","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TermDepositCalc","_s","termDepositTerms","setTermDepositTerms","depositAmount","interestRate","investmentTerm","interestPaidFrequency","handleChange","value","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import {\n  FormLabel,\n  FormControl,\n    Input,\n  NumberInput,\n  NumberInputField,\n  Select,\n  //   Button,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nimport { interestPaidFrequency } from \"./fixtures/investmentTerms\";\n\n// const calculateCompoundInterest;\n\ninterface TermDepositTerms {\n  depositAmount: number;\n  interestRate: number;\n  investmentTerm: number;\n  interestPaidFrequency: \"monthly\" | \"quarterly\" | \"annually\" | \"atMaturity\";\n}\n\nconst TermDepositCalc = () => {\n  const [termDepositTerms, setTermDepositTerms] = useState<TermDepositTerms>({\n    depositAmount: 10,\n    interestRate: 5,\n    investmentTerm: 1,\n    interestPaidFrequency: \"monthly\",\n  });\n\n  //   const [totalBalance, setTotalBalance] = useState();\n\n  const handleChange = (value: any) => {\n    console.log(\"event: \", value);\n  };\n\n  return (\n    <>\n      <FormControl>\n        <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n\n        <NumberInput\n          id=\"depositAmount\"\n          onChange={handleChange}\n          value={termDepositTerms.depositAmount}\n        //   precision={0}\n        >\n          <NumberInputField />\n        </NumberInput>\n      </FormControl>\n\n      {/* <FormControl>\n            <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={2}>\n              <NumberInputField />\n            </NumberInput>\n\n          </FormControl>\n        \n    \n          <FormControl>\n            <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n          </FormControl>\n\n\n          <FormControl>\n            <FormLabel htmlFor=\"interestPaid\">Interest Paid</FormLabel>\n\n            <Select\n              placeholder=\"Select option\"\n              onChange={onChange}\n              value={value}\n            >\n              {interestPaidFrequency.map((interestPaid) => (\n                <option value={interestPaid.periods} key={interestPaid.name}>\n                  {interestPaid.name}\n                </option>\n              ))}\n            </Select>\n\n\n          </FormControl> */}\n    </>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":";;AAAA,SACEA,SAAS,EACTC,WAAW,EAEXC,WAAW,EACXC;;AAEA;AAAA,OACK,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,OAAO;;AAIhC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAmB;IACzES,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,qBAAqB,EAAE;EACzB,CAAC,CAAC;;EAEF;;EAEA,MAAMC,YAAY,GAAIC,KAAU,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;EAC/B,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA,CAACL,WAAW;MAAAoB,QAAA,gBACVf,OAAA,CAACN,SAAS;QAACsB,OAAO,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAE7DpB,OAAA,CAACJ,WAAW;QACVyB,EAAE,EAAC,eAAe;QAClBC,QAAQ,EAAEX,YAAa;QACvBC,KAAK,EAAEP,gBAAgB,CAACE;QAC1B;QAAA;QAAAQ,QAAA,eAEEf,OAAA,CAACH,gBAAgB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAuCd,CAAC;AAEP,CAAC;AAAChB,EAAA,CApEID,eAAe;AAAAoB,EAAA,GAAfpB,eAAe;AAsErB,SAASA,eAAe;AAAG,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}