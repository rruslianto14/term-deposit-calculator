{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useForm } from \"react-hook-form\";\nimport { number, object } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormLabel, FormControl, NumberInput, NumberInputField, Select } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: number().required()\n});\nconst calculateCompoundInterest = (depositAmount, interestRate, investmentTerm, interestPaidFrequency) => {\n  //  ((P*(1+i)^n) - P)\n  const totalBalance = depositAmount * (1 + interestRate / 100 / interestPaidFrequency) ** (interestPaidFrequency * investmentTerm);\n  return totalBalance;\n};\nconst TermDepositCalc = () => {\n  _s();\n  const [totalBalance, setTotalBalance] = useState(0);\n  const {\n    control,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      depositAmount: 100,\n      interestRate: 5,\n      investmentTerm: 2,\n      interestPaidFrequency: interestPaidFrequencies[0].frequency\n    },\n    resolver: yupResolver(schema)\n  });\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] = watch([\"depositAmount\", \"interestRate\", \"investmentTerm\", \"interestPaidFrequency\"]);\n  useEffect(() => {\n    // const totalBalance = calculateCompoundInterest(10000, 1.1, 3, 12);\n    const totalBalance = calculateCompoundInterest(depositAmount, interestRate, investmentTerm, interestPaidFrequency);\n    setTotalBalance(totalBalance);\n    console.log(\"total: \", totalBalance);\n  }, [depositAmount, interestRate, investmentTerm, interestPaidFrequency]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/2 lg:flex-col lg:justify-between lg:py-24\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl\",\n          children: \"Term Deposit Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl\",\n          children: \"Use our term deposit calculator to calculator much interest ou could earn for a term deposit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"depositAmount\",\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(FormControl, {\n            isInvalid: !!(errors !== null && errors !== void 0 && errors.depositAmount),\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"depositAmount\",\n              children: \"Deposit Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n              onChange: onChange,\n              value: value,\n              precision: 0,\n              children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"interestRate\",\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(FormControl, {\n            isInvalid: !!(errors !== null && errors !== void 0 && errors.interestRate),\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"interestRate\",\n              children: \"Interest Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n              onChange: onChange,\n              value: value,\n              precision: 2,\n              children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"investmentTerm\",\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(FormControl, {\n            isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"investmentTerm\",\n              children: \"Investment Term\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n              onChange: onChange,\n              value: value,\n              precision: 0,\n              children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"interestPaidFrequency\",\n          render: ({\n            field: {\n              onChange,\n              value\n            }\n          }) => /*#__PURE__*/_jsxDEV(FormControl, {\n            isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"interestPaidFrequency\",\n              children: \"Interest Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select option\",\n              onChange: onChange,\n              value: value,\n              children: interestPaidFrequencies.map(interestPaid => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: interestPaid.frequency,\n                children: interestPaid.name\n              }, interestPaid.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"blue\"\n      },\n      className: \"pt-24 lg:w-1/2 lg:py-24\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: totalBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TermDepositCalc, \"lqip2oiioJcOoANKh2iYF02McSw=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["Controller","useForm","number","object","yupResolver","FormLabel","FormControl","NumberInput","NumberInputField","Select","useEffect","useState","interestPaidFrequencies","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","depositAmount","required","interestRate","investmentTerm","interestPaidFrequency","calculateCompoundInterest","totalBalance","TermDepositCalc","_s","setTotalBalance","control","formState","errors","watch","defaultValues","frequency","resolver","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","render","field","onChange","value","isInvalid","htmlFor","precision","placeholder","map","interestPaid","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport { InferType, number, object, string } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  NumberInput,\n  NumberInputField,\n  Select,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\n\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: number().required(),\n});\n\ntype FormFields = InferType<typeof schema>;\n\nconst calculateCompoundInterest = (\n  depositAmount: number,\n  interestRate: number,\n  investmentTerm: number,\n  interestPaidFrequency: number\n) => {\n  //  ((P*(1+i)^n) - P)\n  const totalBalance =\n    depositAmount *\n    (1 + interestRate / 100 / interestPaidFrequency) **\n      (interestPaidFrequency * investmentTerm);\n  return totalBalance;\n};\n\nconst TermDepositCalc = () => {\n  const [totalBalance, setTotalBalance] = useState(0);\n\n  const {\n    control,\n    formState: { errors },\n    watch,\n  } = useForm<FormFields>({\n    defaultValues: {\n      depositAmount: 100,\n      interestRate: 5,\n      investmentTerm: 2,\n      interestPaidFrequency: interestPaidFrequencies[0].frequency,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] =\n    watch([\n      \"depositAmount\",\n      \"interestRate\",\n      \"investmentTerm\",\n      \"interestPaidFrequency\",\n    ]);\n\n  useEffect(() => {\n    // const totalBalance = calculateCompoundInterest(10000, 1.1, 3, 12);\n    const totalBalance = calculateCompoundInterest(\n      depositAmount,\n      interestRate,\n      investmentTerm,\n      interestPaidFrequency\n    );\n\n    setTotalBalance(totalBalance);\n    console.log(\"total: \", totalBalance);\n  }, [depositAmount, interestRate, investmentTerm, interestPaidFrequency]);\n\n  return (\n    <>\n      <div className=\"lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/2 lg:flex-col lg:justify-between lg:py-24\">\n        <div>\n          <h1 className=\"text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl\">\n            Term Deposit Calculator\n          </h1>\n          <h2 className=\"mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl\">\n            Use our term deposit calculator to calculator much interest ou could\n            earn for a term deposit.\n          </h2>\n        </div>\n        <form>\n          <Controller\n            control={control}\n            name=\"depositAmount\"\n            render={({ field: { onChange, value } }) => (\n              <FormControl isInvalid={!!errors?.depositAmount}>\n                <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n\n                <NumberInput onChange={onChange} value={value} precision={0}>\n                  <NumberInputField />\n                </NumberInput>\n\n                {/* <FormErrorMessage>\n              {errors.depositAmount && errors.depositAmount.message?.toString()}\n            </FormErrorMessage> */}\n              </FormControl>\n            )}\n          />\n\n          <Controller\n            control={control}\n            name=\"interestRate\"\n            render={({ field: { onChange, value } }) => (\n              <FormControl isInvalid={!!errors?.interestRate}>\n                <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n\n                <NumberInput onChange={onChange} value={value} precision={2}>\n                  <NumberInputField />\n                </NumberInput>\n\n                {/* <FormErrorMessage>\n              {errors.interestRate && errors.interestRate.message?.toString()}\n            </FormErrorMessage> */}\n              </FormControl>\n            )}\n          />\n\n          <Controller\n            control={control}\n            name=\"investmentTerm\"\n            render={({ field: { onChange, value } }) => (\n              <FormControl isInvalid={!!errors?.investmentTerm}>\n                <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n\n                <NumberInput onChange={onChange} value={value} precision={0}>\n                  <NumberInputField />\n                </NumberInput>\n\n                {/* <FormErrorMessage>\n              {errors.investmentTerm &&\n                errors.investmentTerm.message?.toString()}\n            </FormErrorMessage> */}\n              </FormControl>\n            )}\n          />\n\n          <Controller\n            control={control}\n            name=\"interestPaidFrequency\"\n            render={({ field: { onChange, value } }) => (\n              <FormControl isInvalid={!!errors?.investmentTerm}>\n                <FormLabel htmlFor=\"interestPaidFrequency\">\n                  Interest Paid\n                </FormLabel>\n\n                <Select\n                  placeholder=\"Select option\"\n                  onChange={onChange}\n                  value={value}\n                >\n                  {interestPaidFrequencies.map((interestPaid) => (\n                    <option\n                      value={interestPaid.frequency}\n                      key={interestPaid.name}\n                    >\n                      {interestPaid.name}\n                    </option>\n                  ))}\n                </Select>\n\n                {/* <FormErrorMessage>\n              {errors.interestPaidFrequency && errors.interestPaidFrequency.message?.toString()}\n            </FormErrorMessage> */}\n              </FormControl>\n            )}\n          />\n        </form>\n      </div>\n      <div\n        style={{ backgroundColor: \"blue\" }}\n        className=\"pt-24 lg:w-1/2 lg:py-24\"\n      >\n        <div>{totalBalance}</div>\n      </div>\n    </>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}