{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { FormLabel, FormControl, NumberInput, NumberInputField, Select\n//   Button,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { interestPaidFrequency } from \"./fixtures/investmentTerms\";\n\n// const calculateCompoundInterest;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TermDepositCalc = () => {\n  _s();\n  const [termDepositTerms, setTermDepositTerms] = useState({\n    depositAmount: 10,\n    interestRate: 5,\n    investmentTerm: 1,\n    interestPaidFrequency: \"monthly\"\n  });\n\n  //   const [totalBalance, setTotalBalance] = useState();\n\n  const handleChange = value => {\n    console.log(\"event: \", value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"depositAmount\",\n        children: \"Deposit Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n        id: \"depositAmount\",\n        onChange: handleChange,\n        value: termDepositTerms.depositAmount\n        //   precision={0}\n        ,\n        children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"interestPaid\",\n        children: \"Interest Paid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"Select option\",\n        onChange: handleChange,\n        value: termDepositTerms.depositAmount,\n        children: interestPaidFrequency.map(interestPaid => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: interestPaid.value,\n          children: interestPaid.name\n        }, interestPaid.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TermDepositCalc, \"kKezn3Xgp9E0Kx44yvkJHRVvOxA=\");\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["FormLabel","FormControl","NumberInput","NumberInputField","Select","useState","interestPaidFrequency","jsxDEV","_jsxDEV","Fragment","_Fragment","TermDepositCalc","_s","termDepositTerms","setTermDepositTerms","depositAmount","interestRate","investmentTerm","handleChange","value","console","log","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","map","interestPaid","name","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import {\n    FormLabel,\n    FormControl,\n      Input,\n    NumberInput,\n    NumberInputField,\n    Select,\n    //   Button,\n  } from \"@chakra-ui/react\";\n  import { useState } from \"react\";\n  \n  import { interestPaidFrequency } from \"./fixtures/investmentTerms\";\n  \n  // const calculateCompoundInterest;\n  \n  interface TermDepositTerms {\n    depositAmount: number;\n    interestRate: number;\n    investmentTerm: number;\n    interestPaidFrequency: \"monthly\" | \"quarterly\" | \"annually\" | \"atMaturity\";\n  }\n  \n  const TermDepositCalc = () => {\n    const [termDepositTerms, setTermDepositTerms] = useState<TermDepositTerms>({\n      depositAmount: 10,\n      interestRate: 5,\n      investmentTerm: 1,\n      interestPaidFrequency: \"monthly\",\n    });\n  \n    //   const [totalBalance, setTotalBalance] = useState();\n  \n    const handleChange = (value: any) => {\n      console.log(\"event: \", value);\n    };\n  \n    return (\n      <>\n        <FormControl>\n          <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n  \n          <NumberInput\n            id=\"depositAmount\"\n            onChange={handleChange}\n            value={termDepositTerms.depositAmount}\n          //   precision={0}\n          >\n            <NumberInputField />\n          </NumberInput>\n        </FormControl>\n  \n        {/* <FormControl>\n              <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n  \n              <NumberInput onChange={onChange} value={value} precision={2}>\n                <NumberInputField />\n              </NumberInput>\n  \n            </FormControl> */}\n          \n      \n            {/* <FormControl>\n              <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n  \n              <NumberInput onChange={onChange} value={value} precision={0}>\n                <NumberInputField />\n              </NumberInput>\n  \n            </FormControl> */}\n  \n  \n            <FormControl>\n              <FormLabel htmlFor=\"interestPaid\">Interest Paid</FormLabel>\n  \n              <Select\n                placeholder=\"Select option\"\n                onChange={handleChange}\n                value={termDepositTerms.depositAmount}\n              >\n                {interestPaidFrequency.map((interestPaid) => (\n                  <option value={interestPaid.value} key={interestPaid.name}>\n                    {interestPaid.name}\n                  </option>\n                ))}\n              </Select>\n  \n  \n            </FormControl>\n      </>\n    );\n  };\n  \n  export { TermDepositCalc };\n  "],"mappings":";;AAAA,SACIA,SAAS,EACTC,WAAW,EAEXC,WAAW,EACXC,gBAAgB,EAChBC;AACA;AAAA,OACK,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,qBAAqB,QAAQ,4BAA4B;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAmB;IACzEU,aAAa,EAAE,EAAE;IACjBC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBX,qBAAqB,EAAE;EACzB,CAAC,CAAC;;EAEF;;EAEA,MAAMY,YAAY,GAAIC,KAAU,IAAK;IACnCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;EAC/B,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACP,WAAW;MAAAqB,QAAA,gBACVd,OAAA,CAACR,SAAS;QAACuB,OAAO,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAE7DnB,OAAA,CAACN,WAAW;QACV0B,EAAE,EAAC,eAAe;QAClBC,QAAQ,EAAEX,YAAa;QACvBC,KAAK,EAAEN,gBAAgB,CAACE;QAC1B;QAAA;QAAAO,QAAA,eAEEd,OAAA,CAACL,gBAAgB;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAsBVnB,OAAA,CAACP,WAAW;MAAAqB,QAAA,gBACVd,OAAA,CAACR,SAAS;QAACuB,OAAO,EAAC,cAAc;QAAAD,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAE3DnB,OAAA,CAACJ,MAAM;QACL0B,WAAW,EAAC,eAAe;QAC3BD,QAAQ,EAAEX,YAAa;QACvBC,KAAK,EAAEN,gBAAgB,CAACE,aAAc;QAAAO,QAAA,EAErChB,qBAAqB,CAACyB,GAAG,CAAEC,YAAY,iBACtCxB,OAAA;UAAQW,KAAK,EAAEa,YAAY,CAACb,KAAM;UAAAG,QAAA,EAC/BU,YAAY,CAACC;QAAI,GADoBD,YAAY,CAACC,IAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjD,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGE,CAAC;EAAA,eAClB,CAAC;AAEP,CAAC;AAACf,EAAA,CApEID,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAsErB,SAASA,eAAe;AAAG,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}