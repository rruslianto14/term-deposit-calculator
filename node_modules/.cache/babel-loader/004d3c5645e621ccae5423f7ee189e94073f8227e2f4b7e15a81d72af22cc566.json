{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useForm } from \"react-hook-form\";\nimport {\n//   Input,\nNumberInput, NumberInputField\n//   Button,\n} from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onSubmit = data => {\n  console.log(\"Data: \", data);\n};\nconst TermDepositCalc = () => {\n  _s();\n  const {\n    control,\n    handleSubmit,\n    register,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"depositAmount\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(NumberInput, {\n        children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TermDepositCalc, \"Q9l7pgTehRG5macijq2wRt/2fV4=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["Controller","useForm","NumberInput","NumberInputField","jsxDEV","_jsxDEV","onSubmit","data","console","log","TermDepositCalc","_s","control","handleSubmit","register","formState","errors","children","name","render","field","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { Controller, SubmitHandler, useForm } from \"react-hook-form\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n//   Input,\n  NumberInput,\n  NumberInputField\n//   Button,\n} from \"@chakra-ui/react\";\n\ntype FormFields = {\n    depositAmount: number;\n    interest: number;\n};\nconst onSubmit: SubmitHandler<FormFields> = (data) => {\n  console.log(\"Data: \", data);\n};\n\nconst TermDepositCalc = () => {\n  const {\n    control,\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<FormFields>();\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n        <Controller\n            control={control}\n            name=\"depositAmount\"\n            render={({field: {onChange, value }}) => (\n                <NumberInput>\n                    <NumberInputField />\n                </NumberInput>\n            )}\n        />\n\n\n      {/* <FormControl isInvalid={!!errors?.depositAmount}>\n        <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n        <NumberInput\n          id=\"depositAmount\"\n          placeholder=\"100\"\n        //   type=\"number\"\n          {...register(\"depositAmount\", {\n            required: \"Please enter the starting deposit amount\",\n            // minLength: { value: 4, message: \"Minimum length should be 4\" },\n          })}\n        />\n        <FormErrorMessage>\n          {errors.depositAmount && errors.depositAmount.message?.toString()}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl isInvalid={!!errors?.depositAmount}>\n        <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n        <NumberInput\n          id=\"depositAmount\"\n          defaultValue={100}\n          {...register(\"depositAmount\", {\n            required: \"Please enter the starting deposit amount\",\n            // minLength: { value: 4, message: \"Minimum length should be 4\" },\n          })}\n        />\n        <FormErrorMessage>\n          {errors.depositAmount && errors.depositAmount.message?.toString()}\n        </FormErrorMessage>\n      </FormControl> */}\n      {/* <button type=\"submit\">Submit</button> */}\n    </form>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":";;AAAA,SAASA,UAAU,EAAiBC,OAAO,QAAQ,iBAAiB;AACpE;AAIA;AACEC,WAAW,EACXC;AACF;AAAA,OACO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,QAAmC,GAAIC,IAAI,IAAK;EACpDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,IAAI,CAAC;AAC7B,CAAC;AAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IACJC,OAAO;IACPC,YAAY;IACZC,QAAQ;IACRC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGf,OAAO,CAAa,CAAC;EAEzB,oBACEI,OAAA;IAAMC,QAAQ,EAAEO,YAAY,CAACP,QAAQ,CAAE;IAAAW,QAAA,eACnCZ,OAAA,CAACL,UAAU;MACPY,OAAO,EAAEA,OAAQ;MACjBM,IAAI,EAAC,eAAe;MACpBC,MAAM,EAAEA,CAAC;QAACC,KAAK,EAAE;UAACC,QAAQ;UAAEC;QAAM;MAAC,CAAC,kBAChCjB,OAAA,CAACH,WAAW;QAAAe,QAAA,eACRZ,OAAA,CAACF,gBAAgB;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX;IACf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAkCA,CAAC;AAEX,CAAC;AAACf,EAAA,CAtDID,eAAe;EAAA,QAMfT,OAAO;AAAA;AAAA0B,EAAA,GANPjB,eAAe;AAwDrB,SAASA,eAAe;AAAG,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}