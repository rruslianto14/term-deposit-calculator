{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// const calculateCompoundInterest;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TermDepositCalc = () => {\n  _s();\n  const [termDepositTerms, setTermDepositTerms] = useState({\n    depositAmount: 100,\n    interestRate: 5,\n    investmentTerm: 1,\n    interestPaidFrequency: \"monthly\"\n  });\n\n  //   const [totalBalance, setTotalBalance] = useState();\n\n  const handleChange = evt => {\n    console.log(\"event: \", evt.target);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name (4 to 8 characters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TermDepositCalc, \"x0VytlNRmgAx5X3EyAxR9jIi2GA=\");\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TermDepositCalc","_s","termDepositTerms","setTermDepositTerms","depositAmount","interestRate","investmentTerm","interestPaidFrequency","handleChange","evt","console","log","target","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","required","onChange","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import {\n  FormLabel,\n  FormControl,\n  //   Input,\n  NumberInput,\n  NumberInputField,\n  Select,\n  //   Button,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nimport { interestPaidFrequency } from \"./fixtures/investmentTerms\";\n\n// const calculateCompoundInterest;\n\ninterface TermDepositTerms {\n  depositAmount: number;\n  interestRate: number;\n  investmentTerm: number;\n  interestPaidFrequency: \"monthly\" | \"quarterly\" | \"annually\" | \"atMaturity\";\n}\n\nconst TermDepositCalc = () => {\n  const [termDepositTerms, setTermDepositTerms] = useState<TermDepositTerms>({\n    depositAmount: 100,\n    interestRate: 5,\n    investmentTerm: 1,\n    interestPaidFrequency: \"monthly\",\n  });\n\n  //   const [totalBalance, setTotalBalance] = useState();\n\n  const handleChange = (evt: any) => {\n    console.log(\"event: \", evt.target);\n  };\n\n  return (\n    <>\n      <form>\n        <label htmlFor=\"name\">Name (4 to 8 characters):</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          required\n          onChange={handleChange}\n        />\n      </form>\n      {/* <FormControl>\n        <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n\n        <NumberInput\n          id=\"depositAmount\"\n          onChange={handleChange}\n          value={termDepositTerms.depositAmount}\n          precision={0}\n        >\n          <NumberInputField />\n        </NumberInput>\n      </FormControl> */}\n\n      {/* <FormControl>\n            <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={2}>\n              <NumberInputField />\n            </NumberInput>\n\n          </FormControl>\n        \n    \n          <FormControl>\n            <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n          </FormControl>\n\n\n          <FormControl>\n            <FormLabel htmlFor=\"interestPaid\">Interest Paid</FormLabel>\n\n            <Select\n              placeholder=\"Select option\"\n              onChange={onChange}\n              value={value}\n            >\n              {interestPaidFrequency.map((interestPaid) => (\n                <option value={interestPaid.periods} key={interestPaid.name}>\n                  {interestPaid.name}\n                </option>\n              ))}\n            </Select>\n\n\n          </FormControl> */}\n    </>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":";;AASA,SAASA,QAAQ,QAAQ,OAAO;;AAIhC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AASA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAmB;IACzES,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,qBAAqB,EAAE;EACzB,CAAC,CAAC;;EAEF;;EAEA,MAAMC,YAAY,GAAIC,GAAQ,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,GAAG,CAACG,MAAM,CAAC;EACpC,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAOiB,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAyB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvDrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,QAAQ;QACRC,QAAQ,EAAEf;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBAmDP,CAAC;AAEP,CAAC;AAACjB,EAAA,CA9EID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AAgFrB,SAASA,eAAe;AAAG,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}