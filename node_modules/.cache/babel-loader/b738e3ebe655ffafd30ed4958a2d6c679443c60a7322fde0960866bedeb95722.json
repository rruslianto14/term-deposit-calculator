{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useForm } from \"react-hook-form\";\nimport { number, object, string } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormLabel, FormControl,\n//   Input,\nNumberInput, NumberInputField, Select\n//   Button,\n} from \"@chakra-ui/react\";\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: string().matches(/monthly | quarterly | annually | atMaturity/)\n});\n// const calculateCompoundInterest;\n\nconst TermDepositCalc = () => {\n  _s();\n  // const [totalBalance, setTotalBalance ] = useState()\n\n  const {\n    control,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      depositAmount: 100,\n      interestRate: 5,\n      investmentTerm: 2\n    },\n    resolver: yupResolver(schema)\n  });\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] = watch([\"depositAmount\", \"interestRate\", \"investmentTerm\", \"interestPaidFrequency\"]);\n\n  //   useEffect(() => console.log('val: ', {val1: depositAmount, val2: interestRate}), [depositAmount])\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"depositAmount\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.depositAmount),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"depositAmount\",\n          children: \"Deposit Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 0,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"interestRate\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.interestRate),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"interestRate\",\n          children: \"Interest Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 2,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"investmentTerm\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"investmentTerm\",\n          children: \"Investment Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 0,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"interestPaidFrequency\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"interestPaidFrequency\",\n          children: \"Interest Paid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select option\",\n          onChange: onChange,\n          value: value,\n          children: interestPaidFrequencies.map(interestPaid => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: interestPaid.periods,\n            children: interestPaid.name\n          }, interestPaid.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TermDepositCalc, \"fpnhI3tXb7UjTXsYx8pS5Awk9Ck=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["Controller","useForm","number","object","string","yupResolver","FormLabel","FormControl","NumberInput","NumberInputField","Select","interestPaidFrequencies","jsxDEV","_jsxDEV","schema","depositAmount","required","interestRate","investmentTerm","interestPaidFrequency","matches","TermDepositCalc","_s","control","formState","errors","watch","defaultValues","resolver","children","name","render","field","onChange","value","isInvalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","precision","placeholder","map","interestPaid","periods","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport { InferType, number, object, string } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  //   Input,\n  NumberInput,\n  NumberInputField,\n  Select,\n  //   Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\n\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: string().matches(\n    /monthly | quarterly | annually | atMaturity/\n  ),\n});\n\ntype FormFields = InferType<typeof schema>;\n\n// const calculateCompoundInterest;\n\nconst TermDepositCalc = () => {\n  // const [totalBalance, setTotalBalance ] = useState()\n\n  const {\n    control,\n    formState: { errors },\n    watch,\n  } = useForm<FormFields>({\n    defaultValues: {\n      depositAmount: 100,\n      interestRate: 5,\n      investmentTerm: 2\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] =\n    watch([\n      \"depositAmount\",\n      \"interestRate\",\n      \"investmentTerm\",\n      \"interestPaidFrequency\",\n    ]);\n\n  //   useEffect(() => console.log('val: ', {val1: depositAmount, val2: interestRate}), [depositAmount])\n\n  return (\n    <form>\n      <Controller\n        control={control}\n        name=\"depositAmount\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.depositAmount}>\n            <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.depositAmount && errors.depositAmount.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"interestRate\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.interestRate}>\n            <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={2}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.interestRate && errors.interestRate.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"investmentTerm\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.investmentTerm}>\n            <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.investmentTerm &&\n                errors.investmentTerm.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"interestPaidFrequency\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.investmentTerm}>\n            <FormLabel htmlFor=\"interestPaidFrequency\">Interest Paid</FormLabel>\n\n            <Select\n              placeholder=\"Select option\"\n              onChange={onChange}\n              value={value}\n            >\n              {interestPaidFrequencies.map((interestPaid) => (\n                <option value={interestPaid.periods} key={interestPaid.name}>\n                  {interestPaid.name}\n                </option>\n              ))}\n            </Select>\n\n            {/* <FormErrorMessage>\n              {errors.interestPaidFrequency && errors.interestPaidFrequency.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n    </form>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}