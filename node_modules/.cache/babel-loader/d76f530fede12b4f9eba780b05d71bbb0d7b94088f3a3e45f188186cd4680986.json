{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useForm } from \"react-hook-form\";\nimport { number, object, string } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormLabel, FormControl,\n//   Input,\nNumberInput, NumberInputField, Select\n//   Button,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { interestPaidFrequency } from \"./fixtures/investmentTerms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: string().matches(/monthly | quarterly | annually | atMaturity/)\n});\n// const calculateCompoundInterest;\n\nconst TermDepositCalc = () => {\n  _s();\n  // const [totalBalance, setTotalBalance ] = useState()\n\n  const {\n    control,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      depositAmount: 100\n    },\n    resolver: yupResolver(schema)\n  });\n  const [depositAmount, interestRate] = watch(['depositAmount', 'interestRate']);\n  useEffect(() => console.log('val: ', {\n    val1: depositAmount,\n    val2: interestRate\n  }), [depositAmount]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"depositAmount\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.depositAmount),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"depositAmount\",\n          children: \"Deposit Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 0,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"interestRate\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.interestRate),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"interestRate\",\n          children: \"Interest Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 2,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"investmentTerm\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"investmentTerm\",\n          children: \"Investment Term\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          onChange: onChange,\n          value: value,\n          precision: 0,\n          children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      control: control,\n      name: \"interestPaidFrequency\",\n      render: ({\n        field: {\n          onChange,\n          value\n        }\n      }) => /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"interestPaidFrequency\",\n          children: \"Interest Paid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select option\",\n          onChange: onChange,\n          value: value,\n          children: interestPaidFrequency.map(interestPaid => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: interestPaid.periods,\n            children: interestPaid.name\n          }, interestPaid.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(TermDepositCalc, \"s8NEHZGaEI8GRLmXbNE5rm/8sVs=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["Controller","useForm","number","object","string","yupResolver","FormLabel","FormControl","NumberInput","NumberInputField","Select","useEffect","interestPaidFrequency","jsxDEV","_jsxDEV","schema","depositAmount","required","interestRate","investmentTerm","matches","TermDepositCalc","_s","control","formState","errors","watch","defaultValues","resolver","console","log","val1","val2","children","name","render","field","onChange","value","isInvalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","precision","placeholder","map","interestPaid","periods","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport { InferType, number, object, string } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  //   Input,\n  NumberInput,\n  NumberInputField,\n  Select,\n  //   Button,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nimport { interestPaidFrequency } from \"./fixtures/investmentTerms\";\n\nconst schema = object({\n  depositAmount: number().required(),\n  interestRate: number().required(),\n  investmentTerm: number().required(),\n  interestPaidFrequency: string().matches(/monthly | quarterly | annually | atMaturity/)\n});\n\ntype FormFields = InferType<typeof schema>;\n\n// const calculateCompoundInterest;\n\nconst TermDepositCalc = () => {\n    // const [totalBalance, setTotalBalance ] = useState()\n\n  const {\n    control,\n    formState: { errors },\n    watch\n  } = useForm<FormFields>({\n    defaultValues: {\n      depositAmount: 100,\n    },\n    resolver: yupResolver(schema),\n  });\n\n  const [ depositAmount, interestRate ] = watch(['depositAmount', 'interestRate'])\n\n  useEffect(() => console.log('val: ', {val1: depositAmount, val2: interestRate}), [depositAmount])\n\n  return (\n    <form>\n      <Controller\n        control={control}\n        name=\"depositAmount\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.depositAmount}>\n            <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.depositAmount && errors.depositAmount.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"interestRate\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.interestRate}>\n            <FormLabel htmlFor=\"interestRate\">Interest Rate</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={2}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.interestRate && errors.interestRate.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"investmentTerm\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.investmentTerm}>\n            <FormLabel htmlFor=\"investmentTerm\">Investment Term</FormLabel>\n\n            <NumberInput onChange={onChange} value={value} precision={0}>\n              <NumberInputField />\n            </NumberInput>\n\n            {/* <FormErrorMessage>\n              {errors.investmentTerm &&\n                errors.investmentTerm.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n\n      <Controller\n        control={control}\n        name=\"interestPaidFrequency\"\n        render={({ field: { onChange, value } }) => (\n          <FormControl isInvalid={!!errors?.investmentTerm}>\n            <FormLabel htmlFor=\"interestPaidFrequency\">Interest Paid</FormLabel>\n\n            <Select\n              placeholder=\"Select option\"\n              onChange={onChange}\n              value={value}\n            >\n              {interestPaidFrequency.map((interestPaid) => (\n                <option value={interestPaid.periods} key={interestPaid.name}>\n                  {interestPaid.name}\n                </option>\n              ))}\n            </Select>\n\n            {/* <FormErrorMessage>\n              {errors.interestPaidFrequency && errors.interestPaidFrequency.message?.toString()}\n            </FormErrorMessage> */}\n          </FormControl>\n        )}\n      />\n    </form>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}