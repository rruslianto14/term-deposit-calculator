{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { Controller, useForm } from \"react-hook-form\";\nimport { number, object } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { FormErrorMessage, FormLabel, FormControl, NumberInput, NumberInputField, Select, Tooltip } from \"@chakra-ui/react\";\nimport { InfoOutlineIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = object({\n  depositAmount: number().required().typeError(\"Please enter a starting deposit amount\"),\n  interestRate: number().required().typeError(\"Please enter an interest rate\"),\n  investmentTerm: number().required().typeError(\"Please enter an investment term\"),\n  interestPaidFrequency: number().required().typeError(\"Please select your interest payment frequency\")\n});\nconst calculateCompoundInterest = (depositAmount, interestRate, investmentTerm, interestPaidFrequency) => {\n  //  ((P*(1+i)^n) - P)\n  const totalBalance = depositAmount * (1 + interestRate / 100 / interestPaidFrequency) ** (interestPaidFrequency * investmentTerm);\n  return totalBalance;\n};\nconst TermDepositCalc = () => {\n  _s();\n  const [totalBalance, setTotalBalance] = useState(0);\n  const {\n    control,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    defaultValues: {\n      depositAmount: 1000,\n      interestRate: 1,\n      investmentTerm: 1,\n      interestPaidFrequency: interestPaidFrequencies[0].frequency\n    },\n    mode: \"all\",\n    resolver: yupResolver(schema)\n  });\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] = watch([\"depositAmount\", \"interestRate\", \"investmentTerm\", \"interestPaidFrequency\"]);\n  useEffect(() => {\n    if (!errors) {\n      const totalBalance = calculateCompoundInterest(depositAmount, interestRate, investmentTerm, interestPaidFrequency);\n      setTotalBalance(totalBalance);\n    }\n  }, [depositAmount, interestRate, investmentTerm, interestPaidFrequency, errors]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/2 lg:flex-col lg:justify-between lg:py-24\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl\",\n          children: \"Term Deposit Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl\",\n          children: \"Use our term deposit calculator to calculate how much interest you could earn using a term deposit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-2 mb-2 text-2xl sm:font-bold font-medium tracking-tight text-slate-200 sm:text-xl\",\n          children: \"Your Term Deposit details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"depositAmount\",\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$depositAmount;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!(errors !== null && errors !== void 0 && errors.depositAmount),\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"depositAmount\",\n                  children: [\"Deposit Amount ($) \\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                    label: \"The amount of money you would like to deposit between $1,000 and $1,500,000\",\n                    fontSize: \"md\",\n                    placement: \"top\",\n                    children: /*#__PURE__*/_jsxDEV(InfoOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                  onChange: onChange,\n                  value: value,\n                  min: 1000,\n                  max: 1500000,\n                  precision: 0,\n                  children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.depositAmount && ((_errors$depositAmount = errors.depositAmount.message) === null || _errors$depositAmount === void 0 ? void 0 : _errors$depositAmount.toString())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"interestRate\",\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$interestRate$;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!(errors !== null && errors !== void 0 && errors.interestRate),\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"interestRate\",\n                  children: [\"Interest Rate \\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                    label: \"The rate used to calculate your interest earned\",\n                    fontSize: \"md\",\n                    placement: \"top\",\n                    children: /*#__PURE__*/_jsxDEV(InfoOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                  onChange: onChange,\n                  value: value,\n                  precision: 2,\n                  children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.interestRate && ((_errors$interestRate$ = errors.interestRate.message) === null || _errors$interestRate$ === void 0 ? void 0 : _errors$interestRate$.toString())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"investmentTerm\",\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$investmentTer;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!(errors !== null && errors !== void 0 && errors.investmentTerm),\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"investmentTerm\",\n                  children: [\"Investment Term \\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                    label: \"The period you would like to leave your savings invested\",\n                    fontSize: \"md\",\n                    placement: \"top\",\n                    children: /*#__PURE__*/_jsxDEV(InfoOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n                  onChange: onChange,\n                  value: value,\n                  precision: 0,\n                  children: /*#__PURE__*/_jsxDEV(NumberInputField, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.investmentTerm && ((_errors$investmentTer = errors.investmentTerm.message) === null || _errors$investmentTer === void 0 ? void 0 : _errors$investmentTer.toString())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            control: control,\n            name: \"interestPaidFrequency\",\n            render: ({\n              field: {\n                onChange,\n                value\n              }\n            }) => {\n              var _errors$interestPaidF;\n              return /*#__PURE__*/_jsxDEV(FormControl, {\n                isInvalid: !!(errors !== null && errors !== void 0 && errors.interestPaidFrequency),\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  htmlFor: \"interestPaidFrequency\",\n                  children: [\"Interest Paid \\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n                    label: \"The frequency at which interest is paid\",\n                    fontSize: \"md\",\n                    placement: \"top\",\n                    children: /*#__PURE__*/_jsxDEV(InfoOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  onChange: onChange,\n                  value: value,\n                  children: interestPaidFrequencies.map(interestPaid => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: interestPaid.frequency,\n                    children: interestPaid.name\n                  }, interestPaid.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                  children: errors.interestPaidFrequency && ((_errors$interestPaidF = errors.interestPaidFrequency.message) === null || _errors$interestPaidF === void 0 ? void 0 : _errors$interestPaidF.toString())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"blue\"\n      },\n      className: \"pt-8 px-4 lg:w-1/2 lg:py-36\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        style: {\n          backgroundColor: \"yellow\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-2xl font-bold\",\n          children: \"Term Deposit Total balance at maturity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" text-6xl my-3\",\n          children: [\"$\", totalBalance.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderTop: \"3px solid #bbb\",\n            width: \"80%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-xl font-bold\",\n          children: \"Total interest earned\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \" text-3xl\",\n          children: [\"$\", errors ? \"-\" : totalBalance.toLocaleString(undefined, {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TermDepositCalc, \"lqip2oiioJcOoANKh2iYF02McSw=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["Controller","useForm","number","object","yupResolver","FormErrorMessage","FormLabel","FormControl","NumberInput","NumberInputField","Select","Tooltip","InfoOutlineIcon","useEffect","useState","interestPaidFrequencies","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","depositAmount","required","typeError","interestRate","investmentTerm","interestPaidFrequency","calculateCompoundInterest","totalBalance","TermDepositCalc","_s","setTotalBalance","control","formState","errors","watch","defaultValues","frequency","mode","resolver","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","render","field","onChange","value","_errors$depositAmount","isInvalid","htmlFor","label","fontSize","placement","min","max","precision","message","toString","_errors$interestRate$","_errors$investmentTer","_errors$interestPaidF","map","interestPaid","style","backgroundColor","toFixed","borderTop","width","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport { InferType, number, object } from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  NumberInput,\n  NumberInputField,\n  Select,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { InfoOutlineIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useState } from \"react\";\n\nimport { interestPaidFrequencies } from \"./fixtures/investmentTerms\";\n\nconst schema = object({\n  depositAmount: number()\n    .required()\n    .typeError(\"Please enter a starting deposit amount\"),\n  interestRate: number().required().typeError(\"Please enter an interest rate\"),\n  investmentTerm: number()\n    .required()\n    .typeError(\"Please enter an investment term\"),\n  interestPaidFrequency: number()\n    .required()\n    .typeError(\"Please select your interest payment frequency\"),\n});\n\ntype FormFields = InferType<typeof schema>;\n\nconst calculateCompoundInterest = (\n  depositAmount: number,\n  interestRate: number,\n  investmentTerm: number,\n  interestPaidFrequency: number\n) => {\n  //  ((P*(1+i)^n) - P)\n  const totalBalance =\n    depositAmount *\n    (1 + interestRate / 100 / interestPaidFrequency) **\n      (interestPaidFrequency * investmentTerm);\n  return totalBalance;\n};\n\nconst TermDepositCalc = () => {\n  const [totalBalance, setTotalBalance] = useState(0);\n\n  const {\n    control,\n    formState: { errors },\n    watch,\n  } = useForm<FormFields>({\n    defaultValues: {\n      depositAmount: 1000,\n      interestRate: 1,\n      investmentTerm: 1,\n      interestPaidFrequency: interestPaidFrequencies[0].frequency,\n    },\n    mode: \"all\",\n    resolver: yupResolver(schema),\n  });\n\n  const [depositAmount, interestRate, investmentTerm, interestPaidFrequency] =\n    watch([\n      \"depositAmount\",\n      \"interestRate\",\n      \"investmentTerm\",\n      \"interestPaidFrequency\",\n    ]);\n\n  useEffect(() => {\n    if (!errors) {\n      const totalBalance = calculateCompoundInterest(\n        depositAmount,\n        interestRate,\n        investmentTerm,\n        interestPaidFrequency\n      );\n\n      setTotalBalance(totalBalance);\n    }\n  }, [\n    depositAmount,\n    interestRate,\n    investmentTerm,\n    interestPaidFrequency,\n    errors,\n  ]);\n\n  return (\n    <>\n      <div className=\"lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/2 lg:flex-col lg:justify-between lg:py-24\">\n        <div>\n          <h1 className=\"text-4xl font-bold tracking-tight text-slate-200 sm:text-5xl\">\n            Term Deposit Calculator\n          </h1>\n          <p className=\"mt-3 text-lg font-medium tracking-tight text-slate-200 sm:text-xl\">\n            Use our term deposit calculator to calculate how much interest you\n            could earn using a term deposit.\n          </p>\n        </div>\n        <div className=\"p-4\">\n          <h2 className=\"mt-2 mb-2 text-2xl sm:font-bold font-medium tracking-tight text-slate-200 sm:text-xl\">\n            Your Term Deposit details\n          </h2>\n          <form>\n            <Controller\n              control={control}\n              name=\"depositAmount\"\n              render={({ field: { onChange, value } }) => (\n                <FormControl isInvalid={!!errors?.depositAmount}>\n                  <FormLabel htmlFor=\"depositAmount\">\n                    Deposit Amount ($) &nbsp;\n                    <Tooltip\n                      label=\"The amount of money you would like to deposit between $1,000 and $1,500,000\"\n                      fontSize=\"md\"\n                      placement=\"top\"\n                    >\n                      <InfoOutlineIcon />\n                    </Tooltip>\n                  </FormLabel>\n\n                  <NumberInput\n                    onChange={onChange}\n                    value={value}\n                    min={1000}\n                    max={1500000}\n                    precision={0}\n                  >\n                    <NumberInputField />\n                  </NumberInput>\n\n                  <FormErrorMessage>\n                    {errors.depositAmount &&\n                      errors.depositAmount.message?.toString()}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"interestRate\"\n              render={({ field: { onChange, value } }) => (\n                <FormControl isInvalid={!!errors?.interestRate}>\n                  <FormLabel htmlFor=\"interestRate\">\n                    Interest Rate &nbsp;\n                    <Tooltip\n                      label=\"The rate used to calculate your interest earned\"\n                      fontSize=\"md\"\n                      placement=\"top\"\n                    >\n                      <InfoOutlineIcon />\n                    </Tooltip>\n                  </FormLabel>\n                  <NumberInput onChange={onChange} value={value} precision={2}>\n                    <NumberInputField />\n                  </NumberInput>\n\n                  <FormErrorMessage>\n                    {errors.interestRate &&\n                      errors.interestRate.message?.toString()}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"investmentTerm\"\n              render={({ field: { onChange, value } }) => (\n                <FormControl isInvalid={!!errors?.investmentTerm}>\n                  <FormLabel htmlFor=\"investmentTerm\">\n                    Investment Term &nbsp;\n                    <Tooltip\n                      label=\"The period you would like to leave your savings invested\"\n                      fontSize=\"md\"\n                      placement=\"top\"\n                    >\n                      <InfoOutlineIcon />\n                    </Tooltip>\n                  </FormLabel>\n\n                  <NumberInput onChange={onChange} value={value} precision={0}>\n                    <NumberInputField />\n                  </NumberInput>\n\n                  <FormErrorMessage>\n                    {errors.investmentTerm &&\n                      errors.investmentTerm.message?.toString()}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"interestPaidFrequency\"\n              render={({ field: { onChange, value } }) => (\n                <FormControl isInvalid={!!errors?.interestPaidFrequency}>\n                  <FormLabel htmlFor=\"interestPaidFrequency\">\n                    Interest Paid &nbsp;\n                    <Tooltip\n                      label=\"The frequency at which interest is paid\"\n                      fontSize=\"md\"\n                      placement=\"top\"\n                    >\n                      <InfoOutlineIcon />\n                    </Tooltip>\n                  </FormLabel>\n\n                  <Select onChange={onChange} value={value}>\n                    {interestPaidFrequencies.map((interestPaid) => (\n                      <option\n                        value={interestPaid.frequency}\n                        key={interestPaid.name}\n                      >\n                        {interestPaid.name}\n                      </option>\n                    ))}\n                  </Select>\n\n                  <FormErrorMessage>\n                    {errors.interestPaidFrequency &&\n                      errors.interestPaidFrequency.message?.toString()}\n                  </FormErrorMessage>\n                </FormControl>\n              )}\n            />\n          </form>\n        </div>\n      </div>\n      <div\n        style={{ backgroundColor: \"blue\" }}\n        className=\"pt-8 px-4 lg:w-1/2 lg:py-36\"\n      >\n        <div\n          className=\"flex flex-col items-center\"\n          style={{ backgroundColor: \"yellow\" }}\n        >\n          <h3 className=\"text-2xl font-bold\">\n            Term Deposit Total balance at maturity\n          </h3>\n          <p className=\" text-6xl my-3\">${totalBalance.toFixed(2)}</p>\n          <hr style={{ borderTop: \"3px solid #bbb\", width: \"80%\" }} />\n          <h4 className=\"text-xl font-bold\">Total interest earned</h4>\n          <p className=\" text-3xl\">\n            $\n            {errors\n              ? \"-\"\n              : totalBalance.toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2,\n                })}\n          </p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,OAAO,QAAQ,iBAAiB;AACrD,SAAoBC,MAAM,EAAEC,MAAM,QAAQ,KAAK;AAC/C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SACEC,gBAAgB,EAChBC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,MAAM,EACNC,OAAO,QACF,kBAAkB;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,uBAAuB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErE,MAAMC,MAAM,GAAGjB,MAAM,CAAC;EACpBkB,aAAa,EAAEnB,MAAM,CAAC,CAAC,CACpBoB,QAAQ,CAAC,CAAC,CACVC,SAAS,CAAC,wCAAwC,CAAC;EACtDC,YAAY,EAAEtB,MAAM,CAAC,CAAC,CAACoB,QAAQ,CAAC,CAAC,CAACC,SAAS,CAAC,+BAA+B,CAAC;EAC5EE,cAAc,EAAEvB,MAAM,CAAC,CAAC,CACrBoB,QAAQ,CAAC,CAAC,CACVC,SAAS,CAAC,iCAAiC,CAAC;EAC/CG,qBAAqB,EAAExB,MAAM,CAAC,CAAC,CAC5BoB,QAAQ,CAAC,CAAC,CACVC,SAAS,CAAC,+CAA+C;AAC9D,CAAC,CAAC;AAIF,MAAMI,yBAAyB,GAAGA,CAChCN,aAAqB,EACrBG,YAAoB,EACpBC,cAAsB,EACtBC,qBAA6B,KAC1B;EACH;EACA,MAAME,YAAY,GAChBP,aAAa,GACb,CAAC,CAAC,GAAGG,YAAY,GAAG,GAAG,GAAGE,qBAAqB,MAC5CA,qBAAqB,GAAGD,cAAc,CAAC;EAC5C,OAAOG,YAAY;AACrB,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACF,YAAY,EAAEG,eAAe,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAM;IACJkB,OAAO;IACPC,SAAS,EAAE;MAAEC;IAAO,CAAC;IACrBC;EACF,CAAC,GAAGlC,OAAO,CAAa;IACtBmC,aAAa,EAAE;MACbf,aAAa,EAAE,IAAI;MACnBG,YAAY,EAAE,CAAC;MACfC,cAAc,EAAE,CAAC;MACjBC,qBAAqB,EAAEX,uBAAuB,CAAC,CAAC,CAAC,CAACsB;IACpD,CAAC;IACDC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAEnC,WAAW,CAACgB,MAAM;EAC9B,CAAC,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEG,YAAY,EAAEC,cAAc,EAAEC,qBAAqB,CAAC,GACxES,KAAK,CAAC,CACJ,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,uBAAuB,CACxB,CAAC;EAEJtB,SAAS,CAAC,MAAM;IACd,IAAI,CAACqB,MAAM,EAAE;MACX,MAAMN,YAAY,GAAGD,yBAAyB,CAC5CN,aAAa,EACbG,YAAY,EACZC,cAAc,EACdC,qBACF,CAAC;MAEDK,eAAe,CAACH,YAAY,CAAC;IAC/B;EACF,CAAC,EAAE,CACDP,aAAa,EACbG,YAAY,EACZC,cAAc,EACdC,qBAAqB,EACrBQ,MAAM,CACP,CAAC;EAEF,oBACEjB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAKwB,SAAS,EAAC,6FAA6F;MAAAD,QAAA,gBAC1GvB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAIwB,SAAS,EAAC,8DAA8D;UAAAD,QAAA,EAAC;QAE7E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL5B,OAAA;UAAGwB,SAAS,EAAC,mEAAmE;UAAAD,QAAA,EAAC;QAGjF;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5B,OAAA;QAAKwB,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBvB,OAAA;UAAIwB,SAAS,EAAC,sFAAsF;UAAAD,QAAA,EAAC;QAErG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL5B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA,CAACjB,UAAU;YACTgC,OAAO,EAAEA,OAAQ;YACjBc,IAAI,EAAC,eAAe;YACpBC,MAAM,EAAEA,CAAC;cAAEC,KAAK,EAAE;gBAAEC,QAAQ;gBAAEC;cAAM;YAAE,CAAC;cAAA,IAAAC,qBAAA;cAAA,oBACrClC,OAAA,CAACV,WAAW;gBAAC6C,SAAS,EAAE,CAAC,EAAClB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEb,aAAa,CAAC;gBAAAmB,QAAA,gBAC9CvB,OAAA,CAACX,SAAS;kBAAC+C,OAAO,EAAC,eAAe;kBAAAb,QAAA,GAAC,yBAEjC,eAAAvB,OAAA,CAACN,OAAO;oBACN2C,KAAK,EAAC,6EAA6E;oBACnFC,QAAQ,EAAC,IAAI;oBACbC,SAAS,EAAC,KAAK;oBAAAhB,QAAA,eAEfvB,OAAA,CAACL,eAAe;sBAAA8B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eAEZ5B,OAAA,CAACT,WAAW;kBACVyC,QAAQ,EAAEA,QAAS;kBACnBC,KAAK,EAAEA,KAAM;kBACbO,GAAG,EAAE,IAAK;kBACVC,GAAG,EAAE,OAAQ;kBACbC,SAAS,EAAE,CAAE;kBAAAnB,QAAA,eAEbvB,OAAA,CAACR,gBAAgB;oBAAAiC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC,eAEd5B,OAAA,CAACZ,gBAAgB;kBAAAmC,QAAA,EACdN,MAAM,CAACb,aAAa,MAAA8B,qBAAA,GACnBjB,MAAM,CAACb,aAAa,CAACuC,OAAO,cAAAT,qBAAA,uBAA5BA,qBAAA,CAA8BU,QAAQ,CAAC,CAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC1B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;UACd;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEF5B,OAAA,CAACjB,UAAU;YACTgC,OAAO,EAAEA,OAAQ;YACjBc,IAAI,EAAC,cAAc;YACnBC,MAAM,EAAEA,CAAC;cAAEC,KAAK,EAAE;gBAAEC,QAAQ;gBAAEC;cAAM;YAAE,CAAC;cAAA,IAAAY,qBAAA;cAAA,oBACrC7C,OAAA,CAACV,WAAW;gBAAC6C,SAAS,EAAE,CAAC,EAAClB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEV,YAAY,CAAC;gBAAAgB,QAAA,gBAC7CvB,OAAA,CAACX,SAAS;kBAAC+C,OAAO,EAAC,cAAc;kBAAAb,QAAA,GAAC,oBAEhC,eAAAvB,OAAA,CAACN,OAAO;oBACN2C,KAAK,EAAC,iDAAiD;oBACvDC,QAAQ,EAAC,IAAI;oBACbC,SAAS,EAAC,KAAK;oBAAAhB,QAAA,eAEfvB,OAAA,CAACL,eAAe;sBAAA8B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACZ5B,OAAA,CAACT,WAAW;kBAACyC,QAAQ,EAAEA,QAAS;kBAACC,KAAK,EAAEA,KAAM;kBAACS,SAAS,EAAE,CAAE;kBAAAnB,QAAA,eAC1DvB,OAAA,CAACR,gBAAgB;oBAAAiC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC,eAEd5B,OAAA,CAACZ,gBAAgB;kBAAAmC,QAAA,EACdN,MAAM,CAACV,YAAY,MAAAsC,qBAAA,GAClB5B,MAAM,CAACV,YAAY,CAACoC,OAAO,cAAAE,qBAAA,uBAA3BA,qBAAA,CAA6BD,QAAQ,CAAC,CAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;UACd;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEF5B,OAAA,CAACjB,UAAU;YACTgC,OAAO,EAAEA,OAAQ;YACjBc,IAAI,EAAC,gBAAgB;YACrBC,MAAM,EAAEA,CAAC;cAAEC,KAAK,EAAE;gBAAEC,QAAQ;gBAAEC;cAAM;YAAE,CAAC;cAAA,IAAAa,qBAAA;cAAA,oBACrC9C,OAAA,CAACV,WAAW;gBAAC6C,SAAS,EAAE,CAAC,EAAClB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAET,cAAc,CAAC;gBAAAe,QAAA,gBAC/CvB,OAAA,CAACX,SAAS;kBAAC+C,OAAO,EAAC,gBAAgB;kBAAAb,QAAA,GAAC,sBAElC,eAAAvB,OAAA,CAACN,OAAO;oBACN2C,KAAK,EAAC,0DAA0D;oBAChEC,QAAQ,EAAC,IAAI;oBACbC,SAAS,EAAC,KAAK;oBAAAhB,QAAA,eAEfvB,OAAA,CAACL,eAAe;sBAAA8B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eAEZ5B,OAAA,CAACT,WAAW;kBAACyC,QAAQ,EAAEA,QAAS;kBAACC,KAAK,EAAEA,KAAM;kBAACS,SAAS,EAAE,CAAE;kBAAAnB,QAAA,eAC1DvB,OAAA,CAACR,gBAAgB;oBAAAiC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC,eAEd5B,OAAA,CAACZ,gBAAgB;kBAAAmC,QAAA,EACdN,MAAM,CAACT,cAAc,MAAAsC,qBAAA,GACpB7B,MAAM,CAACT,cAAc,CAACmC,OAAO,cAAAG,qBAAA,uBAA7BA,qBAAA,CAA+BF,QAAQ,CAAC,CAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;UACd;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEF5B,OAAA,CAACjB,UAAU;YACTgC,OAAO,EAAEA,OAAQ;YACjBc,IAAI,EAAC,uBAAuB;YAC5BC,MAAM,EAAEA,CAAC;cAAEC,KAAK,EAAE;gBAAEC,QAAQ;gBAAEC;cAAM;YAAE,CAAC;cAAA,IAAAc,qBAAA;cAAA,oBACrC/C,OAAA,CAACV,WAAW;gBAAC6C,SAAS,EAAE,CAAC,EAAClB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAER,qBAAqB,CAAC;gBAAAc,QAAA,gBACtDvB,OAAA,CAACX,SAAS;kBAAC+C,OAAO,EAAC,uBAAuB;kBAAAb,QAAA,GAAC,oBAEzC,eAAAvB,OAAA,CAACN,OAAO;oBACN2C,KAAK,EAAC,yCAAyC;oBAC/CC,QAAQ,EAAC,IAAI;oBACbC,SAAS,EAAC,KAAK;oBAAAhB,QAAA,eAEfvB,OAAA,CAACL,eAAe;sBAAA8B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACZ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eAEZ5B,OAAA,CAACP,MAAM;kBAACuC,QAAQ,EAAEA,QAAS;kBAACC,KAAK,EAAEA,KAAM;kBAAAV,QAAA,EACtCzB,uBAAuB,CAACkD,GAAG,CAAEC,YAAY,iBACxCjD,OAAA;oBACEiC,KAAK,EAAEgB,YAAY,CAAC7B,SAAU;oBAAAG,QAAA,EAG7B0B,YAAY,CAACpB;kBAAI,GAFboB,YAAY,CAACpB,IAAI;oBAAAJ,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGhB,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC,eAET5B,OAAA,CAACZ,gBAAgB;kBAAAmC,QAAA,EACdN,MAAM,CAACR,qBAAqB,MAAAsC,qBAAA,GAC3B9B,MAAM,CAACR,qBAAqB,CAACkC,OAAO,cAAAI,qBAAA,uBAApCA,qBAAA,CAAsCH,QAAQ,CAAC,CAAC;gBAAA;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;UACd;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN5B,OAAA;MACEkD,KAAK,EAAE;QAAEC,eAAe,EAAE;MAAO,CAAE;MACnC3B,SAAS,EAAC,6BAA6B;MAAAD,QAAA,eAEvCvB,OAAA;QACEwB,SAAS,EAAC,4BAA4B;QACtC0B,KAAK,EAAE;UAAEC,eAAe,EAAE;QAAS,CAAE;QAAA5B,QAAA,gBAErCvB,OAAA;UAAIwB,SAAS,EAAC,oBAAoB;UAAAD,QAAA,EAAC;QAEnC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACL5B,OAAA;UAAGwB,SAAS,EAAC,gBAAgB;UAAAD,QAAA,GAAC,GAAC,EAACZ,YAAY,CAACyC,OAAO,CAAC,CAAC,CAAC;QAAA;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D5B,OAAA;UAAIkD,KAAK,EAAE;YAAEG,SAAS,EAAE,gBAAgB;YAAEC,KAAK,EAAE;UAAM;QAAE;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5D5B,OAAA;UAAIwB,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAAC;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D5B,OAAA;UAAGwB,SAAS,EAAC,WAAW;UAAAD,QAAA,GAAC,GAEvB,EAACN,MAAM,GACH,GAAG,GACHN,YAAY,CAAC4C,cAAc,CAACC,SAAS,EAAE;YACrCC,qBAAqB,EAAE,CAAC;YACxBC,qBAAqB,EAAE;UACzB,CAAC,CAAC;QAAA;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACf,EAAA,CAvNID,eAAe;EAAA,QAOf5B,OAAO;AAAA;AAAA2E,EAAA,GAPP/C,eAAe;AAyNrB,SAASA,eAAe;AAAG,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}