{"ast":null,"code":"var _jsxFileName = \"/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { FormErrorMessage, FormLabel, FormControl, Input } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst onSubmit = data => {\n  console.log(\"Data: \", data);\n};\nconst TermDepositCalc = () => {\n  _s();\n  var _errors$depositAmount;\n  const {\n    handleSubmit,\n    register,\n    formState: {\n      errors,\n      isSubmitting\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      isInvalid: !!(errors !== null && errors !== void 0 && errors.depositAmount),\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        htmlFor: \"depositAmount\",\n        children: \"Deposit Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"depositAmount\",\n        placeholder: \"100\",\n        type: \"number\",\n        ...register(\"depositAmount\", {\n          required: \"Please enter the starting deposit amount\"\n          // minLength: { value: 4, message: \"Minimum length should be 4\" },\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: errors.depositAmount && ((_errors$depositAmount = errors.depositAmount.message) === null || _errors$depositAmount === void 0 ? void 0 : _errors$depositAmount.toString())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TermDepositCalc, \"xwWi66ENH5zR1P+WU1HOWnM+xr8=\", false, function () {\n  return [useForm];\n});\n_c = TermDepositCalc;\nexport { TermDepositCalc };\nvar _c;\n$RefreshReg$(_c, \"TermDepositCalc\");","map":{"version":3,"names":["useForm","FormErrorMessage","FormLabel","FormControl","Input","jsxDEV","_jsxDEV","onSubmit","data","console","log","TermDepositCalc","_s","_errors$depositAmount","handleSubmit","register","formState","errors","isSubmitting","children","isInvalid","depositAmount","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","type","required","message","toString","_c","$RefreshReg$"],"sources":["/Users/rafael/Documents/react-typescript/src/pages/termDepositCalc/TermDepositCalc.tsx"],"sourcesContent":["import { SubmitHandler, useForm } from \"react-hook-form\";\nimport {\n  FormErrorMessage,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\n\ntype FormFields = {\n    depositAmount: number;\n};\nconst onSubmit: SubmitHandler<FormFields> = (data) => {\n  console.log(\"Data: \", data);\n};\n\nconst TermDepositCalc = () => {\n  const {\n    handleSubmit,\n    register,\n    formState: { errors, isSubmitting },\n  } = useForm<FormFields>();\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <FormControl isInvalid={!!errors?.depositAmount}>\n        <FormLabel htmlFor=\"depositAmount\">Deposit Amount</FormLabel>\n        <Input\n          id=\"depositAmount\"\n          placeholder=\"100\"\n          type=\"number\"\n          {...register(\"depositAmount\", {\n            required: \"Please enter the starting deposit amount\",\n            // minLength: { value: 4, message: \"Minimum length should be 4\" },\n          })}\n        />\n        <FormErrorMessage>\n          {errors.depositAmount && errors.depositAmount.message?.toString()}\n        </FormErrorMessage>\n      </FormControl>\n      {/* <button type=\"submit\">Submit</button> */}\n    </form>\n  );\n};\n\nexport { TermDepositCalc };\n"],"mappings":";;AAAA,SAAwBA,OAAO,QAAQ,iBAAiB;AACxD,SACEC,gBAAgB,EAChBC,SAAS,EACTC,WAAW,EACXC,KAAK,QAEA,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1B,MAAMC,QAAmC,GAAIC,IAAI,IAAK;EACpDC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,IAAI,CAAC;AAC7B,CAAC;AAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EAC5B,MAAM;IACJC,YAAY;IACZC,QAAQ;IACRC,SAAS,EAAE;MAAEC,MAAM;MAAEC;IAAa;EACpC,CAAC,GAAGlB,OAAO,CAAa,CAAC;EAEzB,oBACEM,OAAA;IAAMC,QAAQ,EAAEO,YAAY,CAACP,QAAQ,CAAE;IAAAY,QAAA,eACrCb,OAAA,CAACH,WAAW;MAACiB,SAAS,EAAE,CAAC,EAACH,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEI,aAAa,CAAC;MAAAF,QAAA,gBAC9Cb,OAAA,CAACJ,SAAS;QAACoB,OAAO,EAAC,eAAe;QAAAH,QAAA,EAAC;MAAc;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC7DpB,OAAA,CAACF,KAAK;QACJuB,EAAE,EAAC,eAAe;QAClBC,WAAW,EAAC,KAAK;QACjBC,IAAI,EAAC,QAAQ;QAAA,GACTd,QAAQ,CAAC,eAAe,EAAE;UAC5Be,QAAQ,EAAE;UACV;QACF,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFpB,OAAA,CAACL,gBAAgB;QAAAkB,QAAA,EACdF,MAAM,CAACI,aAAa,MAAAR,qBAAA,GAAII,MAAM,CAACI,aAAa,CAACU,OAAO,cAAAlB,qBAAA,uBAA5BA,qBAAA,CAA8BmB,QAAQ,CAAC,CAAC;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEX,CAAC;AAACd,EAAA,CA3BID,eAAe;EAAA,QAKfX,OAAO;AAAA;AAAAiC,EAAA,GALPtB,eAAe;AA6BrB,SAASA,eAAe;AAAG,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}